{"ast":null,"code":"var _jsxFileName = \"/home/ben/scrapr/frontend/components/Data.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext } from \"react\";\nimport { ScrapeContext } from \"./ScrapeContext\";\nimport { distanceInWords } from \"date-fns\";\nexport default function Data() {\n  var _useContext = useContext(ScrapeContext),\n      scrapes = _useContext.scrapes;\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, scrapes.twitter.map(function (item) {\n    return __jsx(\"li\", {\n      key: item.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, item.count, \"- \", distanceInWords(new Date(item.date), new Date()));\n  })), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Data: \", scrapes.twitter.length));\n}","map":{"version":3,"sources":["/home/ben/scrapr/frontend/components/Data.js"],"names":["useContext","ScrapeContext","distanceInWords","Data","scrapes","twitter","map","item","date","count","Date","length"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,eAAT,QAAgC,UAAhC;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA,oBACTH,UAAU,CAACC,aAAD,CADD;AAAA,MACrBG,OADqB,eACrBA,OADqB;;AAE7B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACC,OAAR,CAAgBC,GAAhB,CAAoB,UAAAC,IAAI,EAAI;AAC3B,WACE;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACE,KADR,QACiBP,eAAe,CAAC,IAAIQ,IAAJ,CAASH,IAAI,CAACC,IAAd,CAAD,EAAsB,IAAIE,IAAJ,EAAtB,CADhC,CADF;AAKD,GANA,CADH,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWN,OAAO,CAACC,OAAR,CAAgBM,MAA3B,CAVF,CADF;AAcD","sourcesContent":["import { useContext } from \"react\";\nimport { ScrapeContext } from \"./ScrapeContext\";\nimport { distanceInWords } from \"date-fns\";\n\nexport default function Data() {\n  const { scrapes } = useContext(ScrapeContext);\n  return (\n    <div>\n      <ul>\n        {scrapes.twitter.map(item => {\n          return (\n            <li key={item.date}>\n              {item.count}- {distanceInWords(new Date(item.date), new Date())}\n            </li>\n          );\n        })}\n      </ul>\n      <h2>Data: {scrapes.twitter.length}</h2>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}